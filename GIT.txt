git --version
git config --global user.name "Jonathan MirCha"
git config --global user.email jonmircha@gmail.com
git config --global user.ui true
git config --global init.defaultBranch main
git config --list   ----------------------------->>>>> con esto puedo ver la configuracion de git


# asignando visual studio code como editor de configuración de git
git config --global core.editor "code --wait"
git config --global -e



# para estandarizar los saltos de línea en windows
git config --global core.autocrlf true >>>>>>>>>>>>>>>>>>>PARA SUBIR ARCHIVO SI SOY DE WINDOWS



# para estandarizar los saltos de línea en linux/mac
git config --global core.autocrlf input



# ver todas las opciones de la configuración en la terminal
git config -h     >>>>>>>>>>>>>>>>>>>>>> VER AYUDA


# ver todas las opciones de la configuración en el navegador
git help config 







**************************************************************************************************
Inicializar Git en un directorio local


mkdir carpeta ------------------------------ crea un carpeta
cd carpeta ---------------------------------- abre la direccion
touch README.md-----------------------  touch crear un archivo README.md es el nombre de este
touch .gitignore ---------------------------- gitignore hace que ignore un archivo o una carpeta del proyecto
ls ----------------------------------------------- me deja ver los archivos ocultos
ls -a -------------------------------------------- me muestra la direccion de los archivos ocultos
git init ------------------------------------------ crea la carpeta git donde podemos realizar todo los cambios y trackeos
code .     --------------------------------------- code abre visual studio code

>>>>>>>>>>>>>>>>>>>>>>>>>>>> CUANDO QUIERES SUBIR UN CAMBIO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
git add .   ----------------------- Carga el cambio

git commit ------------------------- carga la pantalla visual.core para ingresar el mensaje de cambio
git commit -m "MENSAJE" ------------ es un shorhand para ingresar el mensaje de cambio
git push --------------------------- cuando ya creaste el origin


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  CREAR EL REMOTO FDE GIT >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
git remote add origin https://github.com/usuario/repositorio.git         ----- crear el remoto en origin
git push -u origin master (o usar main)                ----------------------- es ver de escribir todo el remote add origin ahora solo usar git push


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> TRAER LO CAMBIOS (RECOMENDABLE HACER ESTO SIEMPRE ANTES DE ESCRIBIR EL CODIGO)>>>>>>>>>>>>>>>>
git pull   --------------------------- Trae los cambios realizados por el equipo de desarrollo


************************ PARA REPOSITORIOS NUEVOS **************************

1- crear carpeta en github
2- Crear README.md  ------------ touch README.md
3- Inicializar  ---------------- git init
4- Subir cambios --------------- git add . (o nombre de carpeta)
5- Crear el commit ------------- git commit -m "Mensaje"
6- Cambiar rama(crear main)----- git branch -m master main
7- Cambiar el push a main ------ git push -u origin main